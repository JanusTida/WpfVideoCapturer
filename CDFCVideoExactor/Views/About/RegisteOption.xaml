<UserControl x:Class="CDFCVideoExactor.Views.About.RegisteOption"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:metros="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:local="clr-namespace:CDFCVideoExactor.Views.About"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:cvts="clr-namespace:CDFCConverters.Converters;assembly=CDFCConverters"
             xmlns:validaters="clr-namespace:CDFCValidaters.Validaters;assembly=CDFCValidaters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:CDFCBehaviors.Input;assembly=CDFCBehaviors"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="300">
    <Grid>
        <DockPanel>
            <Grid DockPanel.Dock="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="12" />
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style  TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="0,3"/>
                        <Setter Property="Height" Value="24"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="#FF7A7A7A"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
                        <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
                        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
                        <Setter Property="metros:TextBoxHelper.ButtonWidth" Value="22"/>
                        <Setter Property="metros:TextBoxHelper.ButtonFontSize" Value="{DynamicResource ClearTextButtonFontSize}"/>
                        <Setter Property="metros:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                        <Setter Property="metros:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                        <!--<Setter Property="metros:TextBoxHelper.IsMonitoring" Value="True"/>-->
                        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="enterGotFocus">
                                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                        </Storyboard>
                                        <Storyboard x:Key="exitGotFocus">
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                        </Storyboard>
                                        <Storyboard x:Key="enterHasText">
                                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                        </Storyboard>
                                        <Storyboard x:Key="exitHasText">
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid>
                                        <AdornerDecorator>
                                            <AdornerDecorator.CacheMode>
                                                <BitmapCache EnableClearType="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </AdornerDecorator.CacheMode>
                                            <Border x:Name="PART_WaitingForDataEffectGrid" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </AdornerDecorator>
                                        <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Grid x:Name="PART_InnerGrid" Margin="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition x:Name="ButtonRow" Height="*"/>
                                            </Grid.RowDefinitions>
                                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                            <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding metros:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <ContentControl x:Name="PART_FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                                <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding metros:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </ContentControl>
                                            <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding metros:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding metros:TextBoxHelper.ButtonContent}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding metros:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding metros:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" metros:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (metros:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding metros:TextBoxHelper.ButtonWidth}">
                                                <Button.Visibility>
                                                    <Binding Mode="OneWay" Path="(metros:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </Button.Visibility>
                                            </Button>
                                        </Grid>
                                        <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (metros:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding (metros:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                                            <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                                            <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                                            <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="1"/>
                                            <Setter Property="Grid.Column" TargetName="PART_Message" Value="1"/>
                                            <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                            <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding (metros:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                <Condition Binding="{Binding (metros:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="15" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiDataTrigger.EnterActions>
                                            <MultiDataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" From="15" To="0" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                        <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiDataTrigger.ExitActions>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding (metros:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right"/>
                                                <Condition Binding="{Binding (metros:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                            <Setter Property="Grid.ColumnSpan" TargetName="PART_Message" Value="2"/>
                                        </MultiDataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (metros:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                        </Trigger>
                                        <Trigger Property="IsReadOnly" Value="True">
                                            <Setter Property="IsEnabled" TargetName="PART_ClearText" Value="False"/>
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Base" Value="#1BA1E2"/>
                                            <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                            <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="metros:TextBoxHelper.HasText" Value="False"/>
                                                <Condition Property="IsFocused" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.ExitActions>
                                        </MultiTrigger>
                                        <Trigger Property="metros:TextBoxHelper.HasText" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsVisible" Value="True"/>
                                                <Condition Property="metros:TextBoxHelper.IsWaitingForData" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.EnterActions>
                                            <Setter Property="Effect" TargetName="PART_WaitingForDataEffectGrid">
                                                <Setter.Value>
                                                    <DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <Trigger Property="metros:TextBoxHelper.IsWaitingForData" Value="False">
                                            <Setter Property="Effect" TargetName="PART_WaitingForDataEffectGrid" Value="{x:Null}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="TextAlignment" Value="Right"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="DockPanel.Dock" Value="Left"/>
                    </Style>
                </Grid.Resources>
                <TextBlock ><Run Text="{DynamicResource RegisterState}"/><Run Text="{DynamicResource Comma}"/></TextBlock>
                <TextBox Grid.Column="2" Text="{Binding RegisterWord,FallbackValue=未注册,Mode=OneTime}"  IsReadOnly="True"/>
                <TextBlock  Grid.Row="1"><Run Text="{DynamicResource ContactPhone}"/><Run Text="{DynamicResource Comma}"/></TextBlock>
                <TextBox Grid.Row="1"  Grid.Column="2" IsReadOnly="{Binding IsReadOnly}">
                    <i:Interaction.Behaviors>
                        <behaviors:TextBoxInputRegExBehaviour MaxLength="16" RegularExpression="^\d+$"  EmptyValue="0" />
                    </i:Interaction.Behaviors>
                    <TextBox.Text>
                        <Binding Path="PhoneNumString" ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validaters:RequiredRule/>
                                <validaters:PhoneRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Grid.Row="2"><Run Text="{DynamicResource Email}"/><Run Text="{DynamicResource Comma}"/></TextBlock>
                <TextBox Grid.Row="2" Grid.Column="2" IsReadOnly="{Binding IsReadOnly}" >
                    <TextBox.Text>
                        <Binding Path="Email" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validaters:RequiredRule/>
                                <validaters:EmailRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Grid.Row="3" ><Run Text="{DynamicResource HardID}"/><Run Text="{DynamicResource Comma}"/></TextBlock>
                <TextBox Grid.Row="3" Grid.Column="2" Text="{Binding HardID}"  IsReadOnly="True" />
                <TextBlock Grid.Row="4"><Run Text="{DynamicResource SerialNumber}"/><Run Text="{DynamicResource Comma}"/></TextBlock>
                <TextBox Grid.Row="4" Grid.Column="2" Text="{Binding SerialNumber}" IsReadOnly="{Binding IsReadOnly}" />
            </Grid>
            <TextBlock DockPanel.Dock="Bottom">
                <Run>Copyright@2017</Run>
                <Run Foreground="#1bd67b" Text="{DynamicResource CompanyName}" />
                <Run>All Rights Reserved</Run>
            </TextBlock>
            <Border>
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource BorderLessButton}">
                            <Setter Property="Background" Value="#d5d5d5"/>
                            <Setter Property="Padding" Value="5,2"/>
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Margin" Value="12"/>
                        </Style>
                    </StackPanel.Resources>
                    <Button Content="{DynamicResource SubForRegister}"  Command="{Binding SubmitCommand}" Visibility="{Binding IsReadOnly,Converter={x:Static cvts:BoolToVisibilityConverter.StaticInstance},ConverterParameter=2}" />
                </StackPanel>
            </Border>
        </DockPanel>
        <Border Visibility="{Binding IsLoading,Converter={x:Static cvts:BoolToVisibilityConverter.StaticInstance},FallbackValue=Collapsed}" Panel.ZIndex="2000" >
            <dialogs:CustomDialog HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                <dialogs:CustomDialog.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="Gainsboro"  Offset="0"/>
                        <GradientStop Color="White"  Offset="1"/>
                    </LinearGradientBrush>
                </dialogs:CustomDialog.Background>
                <dialogs:CustomDialog.OpacityMask>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="Green" Offset="1"/>
                        <GradientStop Color="Transparent"  Offset="0"/>
                    </LinearGradientBrush>
                </dialogs:CustomDialog.OpacityMask>
                <metros:ProgressRing/>
            </dialogs:CustomDialog>
        </Border>
    </Grid>
    
</UserControl>
