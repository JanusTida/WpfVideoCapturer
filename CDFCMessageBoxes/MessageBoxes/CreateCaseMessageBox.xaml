<metros:MetroWindow x:Class="CDFCMessageBoxes.MessageBoxes.CreateCaseMessageBox"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:metros="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CDFCMessageBoxes.MessageBoxes" Closing="MetroWindow_Closing"
                    BorderThickness="1,0" BorderBrush="Black" Title="{DynamicResource NewRecord}"
                    IsEnabled="{Binding IsEnabled}" IsEnabledChanged="MetroWindow_IsEnabledChanged"
                    WindowTitleBrush="#cfcfcf" TitleBarHeight="30" WindowStartupLocation="CenterScreen"
        mc:Ignorable="d" ResizeMode="NoResize" 
         Height="320" Width="480">
    <!--<metros:MetroWindow.WindowCloseButtonStyle>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid" Width="30" Background="Transparent">
                            <ContentPresenter x:Name="contentPresenter" Opacity="1"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      RecognizesAccessKey="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                             Value="True">
                                <Setter TargetName="contentPresenter"
                                Property="Opacity"
                                Value="1" />
                                <Setter TargetName="grid"
                                Property="Background"
                                Value="LightBlue" />
                                <Setter Property="Foreground"
                                    Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                             Value="False">
                                <Setter TargetName="contentPresenter"
                                Property="Opacity"
                                Value="1" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                             Value="True">
                                <Setter TargetName="grid"
                                Property="Background"
                                Value="#E04343" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                             Value="false">
                                <Setter Property="Foreground"
                                Value="#ADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </metros:MetroWindow.WindowCloseButtonStyle>-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/CDFCMessageBoxes;component/Resources/MessageBoxResourceDictionary.xaml" />
                <ResourceDictionary Source="/CDFCMessageBoxes;component/Languages/zh_CN/CDFCMessageBoxes.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ControlTemplate x:Key="TransparentButtonTempate" TargetType="{x:Type ButtonBase}">
                <Border x:Name="border" BorderBrush="Transparent " BorderThickness="0" Background="Transparent" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsDefaulted" Value="True">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Border Padding="24,0,24,0">
            <Border.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Margin" Value="0,3,20,0"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Margin" Value="0,6"/>
                </Style>
            </Border.Resources>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="12" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition  Height="Auto"/>
                    <RowDefinition  Height="Auto"/>
                    <RowDefinition  Height="Auto"/>
                    <RowDefinition  Height="Auto"/>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock ><Run Text="{DynamicResource CaseName}"/>：</TextBlock>
                <TextBox Grid.Column="1" Text="{Binding CaseName}" />
                <TextBlock Grid.Row="1" ><Run Text="{DynamicResource CaseType}"/>：</TextBlock>
                <TextBox  Grid.Row="1" Text="{Binding CaseType}" Grid.Column="1"/>
                <TextBlock Grid.Row="2"><Run Text="{DynamicResource CasePath}" />：</TextBlock>
                <TextBox Grid.Row="2" Text="{Binding CasePath}" Grid.Column="1" IsReadOnly="True"/>
                <TextBlock Grid.ColumnSpan="2" Grid.Row="3"><Run Text="{DynamicResource CaseDisc}" />：</TextBlock>
                <TextBox Grid.Row="4" Grid.ColumnSpan="2"   Text="{Binding CaseDes}"
                        HorizontalAlignment="Left" TextWrapping="WrapWithOverflow"  Width="200">
                </TextBox>
                <TextBlock Grid.Column="3" ><Run Text="{DynamicResource CaseDate}"/>：</TextBlock>
                <TextBox Grid.Column="4" Text="{Binding CaseTime}" />
                <TextBlock Grid.Row="1" Grid.Column="3"><Run Text="{DynamicResource CaseNum}"/>：</TextBlock>
                <TextBox x:Name="txbCaseNum" Text="{Binding CaseNum}" Grid.Row="1" Grid.Column="4"/>
                <Button Height="{Binding ElementName=txbCaseNum,Path=ActualHeight}" Content="..." Width="24" Grid.Column="3" Grid.Row="2" HorizontalAlignment="Left" Command="{Binding QueryPathCommand}" />
                <TextBlock Grid.ColumnSpan="2" Grid.Column="3" Grid.Row="3" ><Run Text="{DynamicResource CasePartsAndInfo}"/>：</TextBlock>
                <TextBox  Text="{Binding CaseInfo}" Grid.Row="4" Grid.Column="3" Grid.ColumnSpan="2"
                    TextWrapping="WrapWithOverflow" >
                </TextBox>
                <StackPanel Margin="0,12,0,12"  Grid.ColumnSpan="5" Grid.Row="5" >
                    <Button HorizontalAlignment="Center" Style="{StaticResource SureBtnStyle}" 
                              Command="{Binding ConfirmCommand}">
                        <TextBlock Margin="0" Text="{DynamicResource Confirm}" />
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
        <Image Panel.ZIndex="-10" Stretch="Fill" Source="/CDFCMessageBoxes;component/RadialBackground.png"/>
    </Grid>
</metros:MetroWindow>
