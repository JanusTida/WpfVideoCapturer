<Window x:Class="VideoTester.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VideoTester"
        mc:Ignorable="d" Title="{Binding Title}"
        Height="350" Width="525">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <DockPanel >
            <Button DockPanel.Dock="Right" Command="{Binding DoCommand}">加载镜像</Button>
            <TextBlock Text="{Binding Path}"/>
        </DockPanel>
        <DataGrid   SelectedItem="{Binding SelectedRow}" Grid.Row="1"
                            VerticalScrollBarVisibility="Visible" 
                           RowHeaderWidth="0"
                          CanUserReorderColumns="False" 
                           AutoGenerateColumns="False" 
                          CanUserDeleteRows="False" CanUserAddRows="False"
                      HorizontalContentAlignment="Center"  ItemsSource="{Binding CurRows}" 
                      
                          AlternationCount="2"
                      x:Name="dgVolCur"  FontSize="16px">
            <DataGrid.Columns>
                <DataGridTextColumn CanUserSort="False"  TextBlock.TextAlignment="Center" 
                                    Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGridRow}},Path=Header}" 
                                    Width="50" MinWidth="10" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Width="70" SortMemberPath="ItemID"  >
                    <DataGridTemplateColumn.Header >
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsThreeState="True" IsChecked="{Binding DataContext.AllSelected,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Margin="10,0,0,0" 
                                              VerticalAlignment="Center" >
                            </CheckBox>
                        </StackPanel>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                        <Border x:Name="CellBackgroundBorder" HorizontalAlignment="Left"  BorderBrush="{TemplateBinding BorderBrush}" 
                                                        BorderThickness="1,0,0,0" Padding="10,0,0,0"
                                            Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="BorderBrush" Value="Transparent" TargetName="CellBackgroundBorder"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource MetroDataGrid.HighlightTextBrush}"/>

                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightTextBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}"/>
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel         Orientation="Horizontal">
                                <CheckBox VerticalAlignment="Center" Foreground="White"
									    IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  Template="{DynamicResource VideoItemListViewerCheckBoxStyle}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{DynamicResource ChannelNo}" Width="80"
                                        SortMemberPath="ChannelNO" IsReadOnly="True"  >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                    Text="{Binding ChannelNO}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>


                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{DynamicResource Completity}" MinWidth="50"
                                
                             Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Integrity}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{DynamicResource FileSize}" SortMemberPath="Size"
                              MinWidth="100" Width="0.7*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                        Text="{Binding Size,Mode=OneWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{DynamicResource StartTimeCol}" SortMemberPath="StartDate"
                              MinWidth="180" Width="0.7*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                        Text="{Binding StartDate,Mode=OneWay,Converter={x:Static local:DateNumConverter.StaticInstance}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{DynamicResource EndTime}" SortMemberPath="EndDate"
                              MinWidth="180" Width="0.7*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                        Text="{Binding EndDate,Mode=OneWay,Converter={x:Static local:DateNumConverter.StaticInstance}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{DynamicResource FileOffset}" SortMemberPath="StartAddress"
                             MinWidth="80" Width="0.5*" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                        Text="{Binding StartAddress ,Mode=OneWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{DynamicResource ExtensionName}"  MinWidth="80"
                            Width="0.5*" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock 
                                        Text="{Binding ExtensionName,Mode=OneWay}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="恢复" Command="{Binding RecoverCommand}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
    </Grid>
</Window>
